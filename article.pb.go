// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.5
// 	protoc        v6.30.0
// source: article/article.proto

package article

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetArticleInfoFirstRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Content       string                 `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"` // 文章的全部内容
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`       // 所有标签, 用于给文章匹配相应的标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleInfoFirstRequest) Reset() {
	*x = GetArticleInfoFirstRequest{}
	mi := &file_article_article_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleInfoFirstRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleInfoFirstRequest) ProtoMessage() {}

func (x *GetArticleInfoFirstRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleInfoFirstRequest.ProtoReflect.Descriptor instead.
func (*GetArticleInfoFirstRequest) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{0}
}

func (x *GetArticleInfoFirstRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *GetArticleInfoFirstRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type GetArticleInfoFirstResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`           // hash值
	Abstract      string                 `protobuf:"bytes,3,opt,name=abstract,proto3" json:"abstract,omitempty"` // 文章的摘要
	Summary       string                 `protobuf:"bytes,2,opt,name=summary,proto3" json:"summary,omitempty"`   // 文章的总结
	Tags          []string               `protobuf:"bytes,4,rep,name=tags,proto3" json:"tags,omitempty"`         // 与文章相匹配的标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleInfoFirstResponse) Reset() {
	*x = GetArticleInfoFirstResponse{}
	mi := &file_article_article_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleInfoFirstResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleInfoFirstResponse) ProtoMessage() {}

func (x *GetArticleInfoFirstResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleInfoFirstResponse.ProtoReflect.Descriptor instead.
func (*GetArticleInfoFirstResponse) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{1}
}

func (x *GetArticleInfoFirstResponse) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GetArticleInfoFirstResponse) GetAbstract() string {
	if x != nil {
		return x.Abstract
	}
	return ""
}

func (x *GetArticleInfoFirstResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *GetArticleInfoFirstResponse) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

type SaveArticleIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=Key,proto3" json:"Key,omitempty"`              // hash值
	ArticleID     uint32                 `protobuf:"varint,2,opt,name=articleID,proto3" json:"articleID,omitempty"` // 文章ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveArticleIDRequest) Reset() {
	*x = SaveArticleIDRequest{}
	mi := &file_article_article_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveArticleIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveArticleIDRequest) ProtoMessage() {}

func (x *SaveArticleIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveArticleIDRequest.ProtoReflect.Descriptor instead.
func (*SaveArticleIDRequest) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{2}
}

func (x *SaveArticleIDRequest) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *SaveArticleIDRequest) GetArticleID() uint32 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type SaveArticleIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inform        string                 `protobuf:"bytes,1,opt,name=inform,proto3" json:"inform,omitempty"` // 告知客户端是否操作成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SaveArticleIDResponse) Reset() {
	*x = SaveArticleIDResponse{}
	mi := &file_article_article_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SaveArticleIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SaveArticleIDResponse) ProtoMessage() {}

func (x *SaveArticleIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SaveArticleIDResponse.ProtoReflect.Descriptor instead.
func (*SaveArticleIDResponse) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{3}
}

func (x *SaveArticleIDResponse) GetInform() string {
	if x != nil {
		return x.Inform
	}
	return ""
}

type GetArticleInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleID     uint32                 `protobuf:"varint,1,opt,name=articleID,proto3" json:"articleID,omitempty"` // 文章ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleInfoRequest) Reset() {
	*x = GetArticleInfoRequest{}
	mi := &file_article_article_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleInfoRequest) ProtoMessage() {}

func (x *GetArticleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleInfoRequest.ProtoReflect.Descriptor instead.
func (*GetArticleInfoRequest) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{4}
}

func (x *GetArticleInfoRequest) GetArticleID() uint32 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type GetArticleInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Summary       string                 `protobuf:"bytes,1,opt,name=summary,proto3" json:"summary,omitempty"`   // 文章的摘要
	Abstract      string                 `protobuf:"bytes,2,opt,name=abstract,proto3" json:"abstract,omitempty"` // 文章的总结
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetArticleInfoResponse) Reset() {
	*x = GetArticleInfoResponse{}
	mi := &file_article_article_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetArticleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetArticleInfoResponse) ProtoMessage() {}

func (x *GetArticleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetArticleInfoResponse.ProtoReflect.Descriptor instead.
func (*GetArticleInfoResponse) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{5}
}

func (x *GetArticleInfoResponse) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *GetArticleInfoResponse) GetAbstract() string {
	if x != nil {
		return x.Abstract
	}
	return ""
}

type DelArticleInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArticleID     uint32                 `protobuf:"varint,1,opt,name=articleID,proto3" json:"articleID,omitempty"` // 文章ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelArticleInfoRequest) Reset() {
	*x = DelArticleInfoRequest{}
	mi := &file_article_article_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelArticleInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelArticleInfoRequest) ProtoMessage() {}

func (x *DelArticleInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelArticleInfoRequest.ProtoReflect.Descriptor instead.
func (*DelArticleInfoRequest) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{6}
}

func (x *DelArticleInfoRequest) GetArticleID() uint32 {
	if x != nil {
		return x.ArticleID
	}
	return 0
}

type DelArticleInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Inform        string                 `protobuf:"bytes,1,opt,name=inform,proto3" json:"inform,omitempty"` // 告知客户端是否操作成功
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DelArticleInfoResponse) Reset() {
	*x = DelArticleInfoResponse{}
	mi := &file_article_article_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DelArticleInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DelArticleInfoResponse) ProtoMessage() {}

func (x *DelArticleInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_article_article_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DelArticleInfoResponse.ProtoReflect.Descriptor instead.
func (*DelArticleInfoResponse) Descriptor() ([]byte, []int) {
	return file_article_article_proto_rawDescGZIP(), []int{7}
}

func (x *DelArticleInfoResponse) GetInform() string {
	if x != nil {
		return x.Inform
	}
	return ""
}

var File_article_article_proto protoreflect.FileDescriptor

var file_article_article_proto_rawDesc = string([]byte{
	0x0a, 0x15, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2f, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x22, 0x4a, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x79, 0x0a, 0x1b,
	0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69,
	0x72, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x4b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65, 0x79, 0x12, 0x1a, 0x0a,
	0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x61, 0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d,
	0x6d, 0x61, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x22, 0x46, 0x0a, 0x14, 0x53, 0x61, 0x76, 0x65, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x4b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x4b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x22,
	0x2f, 0x0a, 0x15, 0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x22, 0x35, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x4e, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1a, 0x0a, 0x08, 0x61,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x61,
	0x62, 0x73, 0x74, 0x72, 0x61, 0x63, 0x74, 0x22, 0x35, 0x0a, 0x15, 0x44, 0x65, 0x6c, 0x41, 0x72,
	0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x09, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x22, 0x30,
	0x0a, 0x16, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6e, 0x66, 0x6f,
	0x72, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6e, 0x66, 0x6f, 0x72, 0x6d,
	0x32, 0xe8, 0x02, 0x0a, 0x0e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x60, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x12, 0x23, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x24, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x46, 0x69, 0x72, 0x73, 0x74, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a, 0x0d, 0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x12, 0x1d, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x2e, 0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1e, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x2e,
	0x53, 0x61, 0x76, 0x65, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x44, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c,
	0x65, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x51, 0x0a, 0x0e, 0x44, 0x65, 0x6c, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1e, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x61, 0x72, 0x74,
	0x69, 0x63, 0x6c, 0x65, 0x2e, 0x44, 0x65, 0x6c, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x16, 0x5a, 0x14, 0x73,
	0x69, 0x77, 0x75, 0x61, 0x69, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x72, 0x74, 0x69,
	0x63, 0x6c, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
})

var (
	file_article_article_proto_rawDescOnce sync.Once
	file_article_article_proto_rawDescData []byte
)

func file_article_article_proto_rawDescGZIP() []byte {
	file_article_article_proto_rawDescOnce.Do(func() {
		file_article_article_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_article_article_proto_rawDesc), len(file_article_article_proto_rawDesc)))
	})
	return file_article_article_proto_rawDescData
}

var file_article_article_proto_msgTypes = make([]protoimpl.MessageInfo, 8)
var file_article_article_proto_goTypes = []any{
	(*GetArticleInfoFirstRequest)(nil),  // 0: article.GetArticleInfoFirstRequest
	(*GetArticleInfoFirstResponse)(nil), // 1: article.GetArticleInfoFirstResponse
	(*SaveArticleIDRequest)(nil),        // 2: article.SaveArticleIDRequest
	(*SaveArticleIDResponse)(nil),       // 3: article.SaveArticleIDResponse
	(*GetArticleInfoRequest)(nil),       // 4: article.GetArticleInfoRequest
	(*GetArticleInfoResponse)(nil),      // 5: article.GetArticleInfoResponse
	(*DelArticleInfoRequest)(nil),       // 6: article.DelArticleInfoRequest
	(*DelArticleInfoResponse)(nil),      // 7: article.DelArticleInfoResponse
}
var file_article_article_proto_depIdxs = []int32{
	0, // 0: article.articleService.GetArticleInfoFirst:input_type -> article.GetArticleInfoFirstRequest
	2, // 1: article.articleService.SaveArticleID:input_type -> article.SaveArticleIDRequest
	4, // 2: article.articleService.GetArticleInfo:input_type -> article.GetArticleInfoRequest
	6, // 3: article.articleService.DelArticleInfo:input_type -> article.DelArticleInfoRequest
	1, // 4: article.articleService.GetArticleInfoFirst:output_type -> article.GetArticleInfoFirstResponse
	3, // 5: article.articleService.SaveArticleID:output_type -> article.SaveArticleIDResponse
	5, // 6: article.articleService.GetArticleInfo:output_type -> article.GetArticleInfoResponse
	7, // 7: article.articleService.DelArticleInfo:output_type -> article.DelArticleInfoResponse
	4, // [4:8] is the sub-list for method output_type
	0, // [0:4] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_article_article_proto_init() }
func file_article_article_proto_init() {
	if File_article_article_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_article_article_proto_rawDesc), len(file_article_article_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   8,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_article_article_proto_goTypes,
		DependencyIndexes: file_article_article_proto_depIdxs,
		MessageInfos:      file_article_article_proto_msgTypes,
	}.Build()
	File_article_article_proto = out.File
	file_article_article_proto_goTypes = nil
	file_article_article_proto_depIdxs = nil
}
